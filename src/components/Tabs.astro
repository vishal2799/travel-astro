---
export interface Tab {
  id: string;
  label: string;
}

interface Props {
  tabs: Tab[];
  activeTab: string;
}

const { tabs, activeTab } = Astro.props;
---

<div class='mb-12'>
  <div class='flex justify-center border-b border-gray-200'>
    {
      tabs.map((tab) => (
        <button
          class={`py-4 px-8 text-lg font-medium transition-colors duration-300 ${
            activeTab === tab.id
              ? 'border-b-4 border-primary text-primary'
              : 'text-gray-500 hover:text-gray-700 hover:border-b-4 hover:border-gray-300'
          }`}
          data-tab={tab.id}
        >
          {tab.label}
        </button>
      ))
    }
  </div>
</div>

<script>
  const tabButtons = document.querySelectorAll('[data-tab]');
  const tabContents = document.querySelectorAll('[data-tab-content]');

  tabButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const tabId = button.getAttribute('data-tab');

      tabButtons.forEach((btn) => {
        btn.classList.toggle(
          'border-b-4',
          btn.getAttribute('data-tab') === tabId
        );
        btn.classList.toggle(
          'border-primary',
          btn.getAttribute('data-tab') === tabId
        );
        btn.classList.toggle(
          'text-primary',
          btn.getAttribute('data-tab') === tabId
        );
        btn.classList.toggle(
          'text-gray-500',
          btn.getAttribute('data-tab') !== tabId
        );
      });

      tabContents.forEach((content) => {
        content.classList.toggle(
          'hidden',
          content.getAttribute('data-tab-content') !== tabId
        );
      });
    });
  });
</script>
